// Mocks generated by Mockito 5.1.0 from annotations
// in presentation/test/login_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:domain/model/login_parms.dart' as _i2;
import 'package:domain/usecase/login_usecase.dart' as _i3;
import 'package:domain/usecase/validation_usecase.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:presentation/screen/login/bloc/login_data.dart' as _i7;
import 'package:presentation/screen/mapper/login_view_mapper.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeLoginParms_0 extends _i1.Fake implements _i2.LoginParms {}

/// A class which mocks [LoginStepUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginStepUseCase extends _i1.Mock implements _i3.LoginUseCase {
  MockLoginStepUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> call(_i2.LoginParms? parms) =>
      (super.noSuchMethod(Invocation.method(#call, [parms]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [LoginValidationUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginValidationUseCase extends _i1.Mock
    implements _i5.LoginValidationUseCase {
  MockLoginValidationUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> call(_i2.LoginParms? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [LoginViewMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginViewMapper extends _i1.Mock implements _i6.LoginViewMapper {
  MockLoginViewMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LoginParms mapScreenDataToRequest(_i7.LoginData? screenData) => (super
      .noSuchMethod(Invocation.method(#mapScreenDataToRequest, [screenData]),
          returnValue: _FakeLoginParms_0()) as _i2.LoginParms);
}
