// // Mocks generated by Mockito 5.1.0 from annotations
// // in domain/test/domain_repo_test.dart.
// // Do not manually edit this file.

// import 'dart:async' as _i4;

// import 'package:domain/model/api_auth_response.dart' as _i3;
// import 'package:domain/model/job.dart' as _i6;
// import 'package:domain/model/list_jobs_to_chache.dart' as _i5;
// import 'package:domain/repository/network_repository.dart' as _i2;
// import 'package:mockito/mockito.dart' as _i1;

// // ignore_for_file: type=lint
// // ignore_for_file: avoid_redundant_argument_values
// // ignore_for_file: avoid_setters_without_getters
// // ignore_for_file: comment_references
// // ignore_for_file: implementation_imports
// // ignore_for_file: invalid_use_of_visible_for_testing_member
// // ignore_for_file: prefer_const_constructors
// // ignore_for_file: unnecessary_parenthesis
// // ignore_for_file: camel_case_types

// /// A class which mocks [INetworkRepository].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockINetworkRepository extends _i1.Mock
//     implements _i2.INetworkRepository {
//   MockINetworkRepository() {
//     _i1.throwOnMissingStub(this);
//   }

//   @override
//   set getdata(_i3.ApiAuthorizationResponse? _getdata) =>
//       super.noSuchMethod(Invocation.setter(#getdata, _getdata),
//           returnValueForMissingStub: null);
//   @override
//   _i4.Future<_i3.ApiAuthorizationResponse?> getJobs() =>
//       (super.noSuchMethod(Invocation.method(#getJobs, []),
//               returnValue: Future<_i3.ApiAuthorizationResponse?>.value())
//           as _i4.Future<_i3.ApiAuthorizationResponse?>);
//   @override
//   void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
//       returnValueForMissingStub: null);
// }

// /// A class which mocks [JobsToCache].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockJobsToCache extends _i1.Mock implements _i5.JobsToCache {
//   MockJobsToCache() {
//     _i1.throwOnMissingStub(this);
//   }

//   @override
//   set jobs(List<_i6.Job>? _jobs) =>
//       super.noSuchMethod(Invocation.setter(#jobs, _jobs),
//           returnValueForMissingStub: null);
// }
